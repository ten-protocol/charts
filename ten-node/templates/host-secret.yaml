{{- if .Values.host.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ten-node.fullname" . }}-host
  labels:
    app: {{ .Release.Name }}-host
    {{- include "ten-node.labels" . | nindent 4 }}
type: Opaque
data:
  {{- range $key, $value := .Values.host.secretEnv }}
  {{ $key }}: {{ $value | b64enc | quote }}
  {{- end }}
{{- end }}

---

{{- if .Values.postgresql.enabled }}
{{- $databaseUser := .Values.postgresql.username | default "postgres" }}
{{- $secretName := printf "%s-postgresql" .Release.Name }}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
# Set the password to an existing secret data value or generate a random one when it does not exist
{{- $databasePassword := (get $secretData "postgres-password") | default (randAlphaNum 10 | b64enc) }}
{{- $host := printf "%s-postgresql:5432" .Release.Name }}
{{- $databaseURL := printf "postgresql://%s:%s@%s" $databaseUser ($databasePassword | b64dec) $host }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-host-db
  labels:
    app: {{ .Release.Name }}-host
    {{- include "ten-node.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
data:
  HOST_DB_POSTGRESHOST: {{ $databaseURL | b64enc | quote }}
{{- end }}