global:
  imagePullSecrets: []
  imagePullPolicy: IfNotPresent


# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""
enclave:
  enabled: true
  replicaCount: 1
  image:
    repository: testnetobscuronet.azurecr.io/obscuronet/dev_enclave
    tag: latest
    pullPolicy: IfNotPresent
    imagePullSecrets: []

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80

  nodeSelector:
    kubernetes.io/hostname: aks-sgxpool2-37956146-vmss000002
  

  tolerations: []

  affinity: {}  # Ensure this matches the agent pool label

  # affinity:
  #   nodeAffinity:
  #     required:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: kubernetes.io/hostname
  #           operator: In
  #           values:
  #           - "aks-sgxpool2-37956146-vmss000001"  # Replace with your actual node hostname

  
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false

  secretEnv:
    ENCLAVE_DB_SQLITEPATH: ""

  extraEnv: []

  service:
    type: ClusterIP
    port: 11001

  ports:
    - name: rpc
      port: 11001
      containerPort: 11001

  resources:
    limits:
      memory: 5Gi
      cpu: 1000m
    requests:
      memory: 5Gi
      cpu: 500m

  storage:
    storageClass: "default"
    size: 10Gi  

  serviceAccount:
    create: true


 # Ensure this matches the node hostname

host:
  enabled: true
  replicaCount: 1
  image:
    repository: "testnetobscuronet.azurecr.io/obscuronet/dev_host"
    tag: "latest"
    pullPolicy: "IfNotPresent"
    imagePullSecrets: []
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
    
  secretEnv:
    NODE_PRIVATEKEY: "REPLACE_ME" #Private key of the node
  extraEnv: []
  service:
    type: LoadBalancer
  ports:
    - name: http
      port: 80
      containerPort: 80
    - name: ws
      port: 81
      containerPort: 81
    - name: p2p
      port: 10000
      containerPort: 10000
  resources:
    limits:
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 1Gi
      cpu: 500m

postgresql:
  enabled: true

  tls: 
    enabled: true
    autoGenerated: true

  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 20Gi

edb:
  enabled: true
  image:
    repository: "ghcr.io/edgelesssys"
    tag: "v0.3.2"
    pullPolicy: "IfNotPresent"
    imagePullSecrets: []
  replicas: 1
  sqlApiHost: "0.0.0.0"
  sqlApiPort: 3306
  restApiHost: "0.0.0.0"
  restApiPort: 8080
  debug: false
  simulation: false
  heapSize: 1
  marbleType: EdgelessDB
  launchMarble: false
  resources:
    limits:
      sgx.intel.com/epc: "10Mi"
      sgx.intel.com/provision: 1
      sgx.intel.com/enclave: 1
  storage:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  tolerations:
    - key: sgx.intel.com/epc
      operator: Exists
      effect: NoSchedule
  nodeSelector:
    kubernetes.io/hostname: aks-sgxpool2-37956146-vmss000002
  # nodeName: aks-sgxpool2-37956146-vmss000001  # Ensure this matches the node hostname

config:
  network:
    chainid: 443
    genesisjson: '{}'
    batch:
        interval: 1s
        maxinterval: 1s
        maxsize: 56320
    gas:
        basefee: "1000000000"
        mingasprice: "1000000000"
        paymentaddress: 0xd6c9230053f45f873cb66d8a02439380a37a4fbf
        batchexecutionlimit: "300000000000"
        localexecutioncap: "300000000000"
    l1:
        chainid: 1337
        blocktime: 15s
        starthash: 0xad629f9597e21b1462b37300a9e9f2ee8e6d864d2719481521d86dadb490ed08
        l1contracts:
            managementcontract: 0x15Ff96b65CeD7548D68a8C6CdaEeb67763aB7077
            messagebuscontract: 0x0A5c1FA362e77B4aE3841E8E45DFE70Cd3C12D9e
            bridgecontract: "0x0000000000000000000000000000000000000000"
    rollup:
        interval: 15m0s
        maxinterval: 10m0s
        maxsize: 131072
    sequencer:
        p2paddress: obscuronode-0-dev-testnet.uksouth.cloudapp.azure.com:10000
    crosschain:
        interval: 6s
  node:
    nodetype: "validator"
    name: ""
    id: "REPLACE_ME" #Public key of the node
    isgenesis: false
  host:
    db:
        useinmemory: false
        sqlitepath: ""
    debug:
        enablemetrics: true
        metricshttpport: 0
        enableprofiler: false
        enabledebugnamespace: true
    enclave:
        rpcaddresses:
            - obscuronode-enclave:11001
        rpctimeout: 10s
    l1:
        websocketurl: ws://dev-testnet-eth2network.uksouth.cloudapp.azure.com:9000
        l1beaconurl: dev-testnet-eth2network.uksouth.cloudapp.azure.com:12600
        l1blobarchiveurl: ""
        rpctimeout: 15s
    log:
        level: 3
        path: sys_out
    p2p:
        isdisabled: false
        bindaddress: 0.0.0.0:10000
        timeout: 10s
    rpc:
        address: 0.0.0.0
        enablehttp: true
        httpport: 80
        enablews: true
        wsport: 81
  enclave:
    simulation: false
    enableattestation: true
    db:
        useinmemory: false
        edgelessdbhost: obscuronode-edgelessdb
        sqlitepath: ""
    debug:
        enabledebugnamespace: true
        enableprofiler: false
    l1:
        enableblockvalidation: false
        genesisjson: []
    log:
        level: 3
        path: sys_out
    rpc:
        bindaddress: 0.0.0.0:11001
        timeout: 5s